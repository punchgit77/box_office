{"version":3,"sources":["components/Navs.styled.js","components/Navs.js","components/Title.styled.js","components/Title.js","components/MainPageLayout.js","misc/config.js","components/styled.js","components/show/ShowCard.styled.js","components/show/ShowCard.js","misc/custom-hooks.js","components/show/ShowGrid.js","components/actor/ActorCard.styled.js","components/actor/ActorCard.js","images/not_found.png","components/actor/ActorGrid.js","pages/Home.styled.js","components/CustomRadio.js","pages/Home.js","pages/Starred.js","components/show/ShowMainData.styled.js","components/show/ShowMainData.js","components/show/Details.styled.js","components/show/Details.js","components/show/Seasons.styled.js","components/show/Seasons.js","components/show/Cast.styled.js","components/show/Cast.js","pages/Show.styled.js","pages/Show.js","App.js","reportWebVitals.js","index.js"],"names":["NavList","styled","ul","LinkStyled","Link","theme","mainColors","gray","blue","LINKS","to","text","Navs","location","useLocation","map","item","className","pathname","TitleWrapper","div","dark","Title","title1","title2","title3","subtitle","MainPageLayout","children","API_BASE_URL","apiGet","queryString","a","fetch","then","r","json","response","FlexGrid","FadeIn","SearchCard","Star","props","active","StyledShowcard","ShowCard","id","image","name","summary","onstarclick","isstarred","summaryAsText","split","slice","join","replace","src","alt","type","onClick","usePersistedReducer","reducer","initialstate","key","useReducer","initial","persisted","localStorage","getItem","JSON","parse","state","dispatch","useEffect","setItem","stringify","ShowReducer","prevState","action","showId","filter","useShows","isloading","error","show","ShowGrid","data","starredshows","dispatchstarred","includes","medium","StyledActorCard","ActorCard","gender","deathday","birthday","country","ActorGrid","person","IMAGE_NOT_FOUND","Searchinput","input","Radioinputwrapper","SearchButtonWrapper","RadioWrapper","label","CustomRadio","restProps","htmlFor","Home","useState","sessionStorage","seInput","newState","useLastQuery","results","setresults","searchOption","setsearchOption","onRadiochange","ev","target","value","isShowsearch","Onsearch","result","placeholder","onChange","onKeyDown","keyCode","checked","length","Starred","starred","shows","setshows","setisloading","seterror","promises","Promise","all","apiData","catch","err","message","MainDataWrapper","Taglist","ShowMainData","rating","tags","original","average","dangerouslySetInnerHTML","__html","tag","i","DetailsWrapper","Details","status","premiered","network","SeasonWrapper","SeasonList","Seasons","seasons","reduce","acc","season","episodeOrder","number","premierDate","endDate","CastList","Cast","cast","character","voice","ShowPageWrapper","InfoBlock","Show","isMounted","setTimeout","useShow","useParams","genres","_embedded","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2acb1803.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const NavList=styled.ul`\r\n              display:flex;\r\n              justify-content: center;\r\n              list-style: none;\r\n              margin: 0 0 30px;\r\n              padding: 0;\r\n  \r\n`;\r\n\r\nexport const LinkStyled=styled(Link)`\r\n    margin:0 10px;\r\n    padding:3px 15px;\r\n    position:relative;\r\n    text-decoration: none;\r\n    color:${({theme}) =>theme.mainColors.gray};\r\n     &.active{\r\n          color:${({theme})=>theme.mainColors.blue};\r\n     &:after{\r\n         content: '';\r\n         position: absolute;\r\n         display: block;\r\n         height: 2px;\r\n         left: 0%;\r\n         bottom: 0%;\r\n         background-color:${({theme}) =>theme.mainColors.blue} ;\r\n\r\n         animation: slide-in 0.3s ease-in forwards;\r\n         @keyframes slide-in{\r\n             from{\r\n                 left:50%;\r\n                 width: 0%;\r\n             }\r\n             to{\r\n                 left:0%;\r\n                 width:100%\r\n             }\r\n         }\r\n        }\r\n     }\r\n\r\n`;","import React from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport { LinkStyled, NavList } from './Navs.styled';\r\n\r\nconst LINKS=[\r\n\r\n{to:\"/Home\" ,text:'Home'},\r\n{to:\"/starred\",text:'Starred'}\r\n\r\n]\r\nconst Navs = () => \r\n    {\r\n          const location =useLocation();\r\n\r\n      return ( <div>\r\n            \r\n            <NavList>\r\n                {LINKS.map(item=>(\r\n                <li key={item.to}>\r\n                 <LinkStyled to={item.to} className={item.to===location.pathname?'active':' '} >{item.text}</LinkStyled>\r\n                </li>))}\r\n            </NavList>\r\n        \r\n        </div>\r\n)    };\r\n\r\nexport default Navs;\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const TitleWrapper=styled.div`\r\n         text-align: center;\r\n         margin:0  0 40px;\r\n         h1{\r\n             color:${({theme})=>theme.mainColors.blue};\r\n             letter-spacing: 5px;\r\n             text-transform: uppercase;\r\n             margin: 0 0 10px;\r\n\r\n\r\n         }\r\n         h1 span{\r\n             color:blue;\r\n             height:20px;\r\n             border-radius:20px;\r\n             font-size:45px;\r\n         }\r\n        \r\n\r\n         p{\r\n             margin:0;\r\n             color:${({theme})=>theme.mainColors.dark};\r\n             text-decoration: none;\r\n         }\r\n \r\n\r\n`;","/* eslint-disable arrow-body-style */\r\nimport React from 'react';\r\nimport { TitleWrapper } from './Title.styled';\r\n\r\nconst Title = ({title1,title2,title3,subtitle}) => \r\n     {\r\n        return (\r\n        <TitleWrapper>\r\n            <h1> {title1} <span>{title2}</span>{title3} </h1>\r\n            <p>{subtitle}</p>\r\n        </TitleWrapper>\r\n        );\r\n    }\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport Navs from \"./Navs\";\r\nimport Title from './Title';\r\n\r\nconst MainPageLayout = ({children}) => \r\n     (\r\n        <div>\r\n            <Title  title1=\"Box\" title2=\"O\" title3=\"ffice\"  subtitle=\"are you looking for a movie or a actor?\"/>\r\n            <Navs/>\r\n            {children}\r\n        </div>\r\n    )\r\n\r\n\r\nexport default MainPageLayout\r\n","\r\nconst API_BASE_URL = 'https://api.tvmaze.com';\r\n\r\nexport async function apiGet(queryString){\r\n    const response = await fetch(`${API_BASE_URL}${queryString}`).then(r=>r.json());\r\n    return response;\r\n}","import styled from \"styled-components\";\r\nimport FadeIn from \"react-fade-in/lib/FadeIn\";\r\n\r\nexport const FlexGrid=styled(FadeIn)`\r\n             display:flex;\r\n             justify-content: center;\r\n             flex-wrap: wrap;\r\n`;\r\n\r\nexport const SearchCard =styled.div`\r\n                     width: 200px;\r\n                     height:100%;\r\n                     margin: 0 15px 40px;\r\n\r\n\r\n                .img-wrapper{\r\n                    width:100%;\r\n                    border-radius: 40px;\r\n                    height: 290px;\r\n                    overflow: hidden;\r\n                    border:1px solid #ddd;\r\n                   \r\n                    img{\r\n                        object-fit:cover ;\r\n                        height:100%;\r\n                        width:100%;\r\n\r\n                    }\r\n                }\r\n\r\n        h1{\r\n            margin:10px 0;\r\n            font-size: 21px;\r\n\r\n        }\r\n        p{\r\n            margin:0;\r\n        }`;\r\n\r\nexport const Star=styled.div`\r\n           display: inline-block;\r\n           width:18px;\r\n           height: 18px;\r\n           background-color: ${props=>(props.active?'#ffc806':'#ddd')};\r\n           clip-path: polygon(\r\n               50% 0%,\r\n               61% 35%,\r\n               98% 35%,\r\n               68% 57%,\r\n               79% 91%,\r\n               50% 70%,\r\n               21% 91%,\r\n               32% 57%,\r\n               2% 35%,\r\n               39% 35%\r\n           );\r\n`;","import styled from \"styled-components\";\r\nimport { SearchCard } from \"../styled\";\r\n\r\nexport const StyledShowcard=styled(SearchCard)`\r\n                    .btns{\r\n                    margin-top:15px ;\r\n                    display:flex;\r\n                    justify-content: space-between;\r\n                    align-items: center;\r\n                    Link{\r\n                        text-decoration-color:#000;\r\n                        color:#000;\r\n                        &:hover{\r\n                            text-decoration-color:purple;\r\n                            color:blue;\r\n                            \r\n                        }\r\n                    }\r\n                    button{ \r\n                        outline:none;\r\n                        border:2px solid #8e8e8e;\r\n                        border-radius: 15px;\r\n                        padding:5px 20px;\r\n                        background-color:#fff;\r\n                        display:flex;\r\n                        justify-content:center;\r\n                        align-items:center;\r\n                        &:hover{\r\n                            cursor:pointer;\r\n                        }\r\n\r\n                    }\r\n                }`;","/* eslint-disable jsx-a11y/control-has-associated-label */\r\n/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Star } from '../styled';\r\n// import {SearchCard} from '../styled'\r\nimport { StyledShowcard } from './ShowCard.styled';\r\n// import { FlexGrid } from '../styled';\r\n\r\nconst ShowCard = ({ id,image,name,summary,onstarclick,isstarred}) => {\r\n\r\n    const summaryAsText = summary?`${summary.split(' ').slice(0,4).join(' ').replace(/<.+?>/g, '')}...`:'No Description';\r\n    \r\n    return(\r\n        <StyledShowcard>\r\n            <div className=\"img-wrapper\">\r\n                <img src={image} alt=\"show\"/>\r\n            </div>\r\n            <h1>{name}</h1>\r\n            <p>{summaryAsText}</p>\r\n            <div className=\"btns\">\r\n                <Link to={`/show/${id}`}>Read more</Link>\r\n                <button type=\"button\" onClick={onstarclick}><Star active={isstarred}/></button>\r\n                \r\n            </div>\r\n            {/* <p>______________________________________</p> */}\r\n        </StyledShowcard>\r\n          \r\n    );\r\n    };\r\n\r\nexport default ShowCard;\r\n","import { useReducer,useEffect,useState } from \"react\";\r\nimport { apiGet } from './config';\r\n\r\n\r\nfunction usePersistedReducer(reducer,initialstate,key){\r\n\r\n                const [state,dispatch]=useReducer(reducer,initialstate,initial=>{\r\n                    const persisted=localStorage.getItem(key);\r\n                    return persisted?JSON.parse(persisted):initial;\r\n                });\r\n\r\n     useEffect(()=>{\r\n         localStorage.setItem(key,JSON.stringify(state));\r\n     },[state,key]);\r\n\r\n     return [state,dispatch];\r\n\r\n}\r\n\r\nfunction ShowReducer(prevState,action){\r\n    switch(action.type){\r\n        case 'ADD': { return [...prevState,action.showId] }\r\n    \r\n         case 'REMOVE':{ return prevState.filter((showId=>showId!==action.showId))}\r\n\r\n    default: return prevState;\r\n    }\r\n}\r\n\r\nexport function useShows(key='shows'){\r\n    return usePersistedReducer(ShowReducer,[],key);\r\n}\r\n\r\nexport function useLastQuery(key='LastQuery'){\r\n    const [input,seInput]=useState(()=>{\r\n        const persisted=sessionStorage.getItem(key);\r\n        return persisted?JSON.parse(persisted):\" \";\r\n    });\r\n\r\n    const setpersistedinput=(newState)=>{\r\n        seInput(newState);\r\n        sessionStorage.setItem(key,JSON.stringify(newState));\r\n    };\r\n\r\n    return [input,setpersistedinput];\r\n}\r\n\r\nconst reducer = (prevState, action) => {\r\n    \r\n\r\n    switch (action.type) {\r\n        \r\n        case 'FETCH_SUCCESS':{\r\n             return { isloading: false, error:null, show:action.show}}\r\n\r\n        case 'FETCH_FAILED':{ return {...prevState,isloading:false,error:action.error}}\r\n\r\n        default : return prevState;\r\n    }\r\n}\r\n\r\n\r\nexport function useShow(showId){\r\n\r\n    const [state,dispatch] = useReducer(reducer,{\r\n        show:null,\r\n        isloading:true,\r\n        error:null\r\n       });\r\n\r\n    useEffect(()=>{\r\n        let isMounted=true;\r\n          apiGet(`/shows/${showId}?embed[]=seasons&embed[]=cast`).then(results=>{\r\n            //    setshow(results);\r\n            setTimeout(()=>{\r\n                if(isMounted){\r\n               dispatch({type:'FETCH_SUCCESS',show:results})\r\n                }\r\n        },1000)\r\n        }\r\n              ).catch(err=>{\r\n                  if(isMounted){\r\n                    dispatch({type:'FETCH_FAILED',error:err.message})\r\n\r\n                  }\r\n              });\r\n\r\n            return () => {\r\n                isMounted=false;\r\n            }\r\n    },[showId]);\r\n\r\n    return state;\r\n}\r\n\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\n// import IMAGE_NOT_FOUND from '../../images/not_found.png'\r\nimport { FlexGrid } from '../styled';\r\nimport ShowCard from './ShowCard';\r\nimport { useShows } from '../../misc/custom-hooks';\r\n\r\nconst ShowGrid = ({data}) => {\r\n\r\n  const [starredshows,dispatchstarred]=useShows();\r\n return (<FlexGrid>\r\n         {data.map(({show})=> {\r\n                      const isstarred=starredshows.includes(show.id);\r\n\r\n                      const onstarclick=()=>{if(isstarred)\r\n                                                {dispatchstarred({type:'REMOVE',showId:show.id})}\r\n                                                  else{dispatchstarred({type:'ADD',showId:show.id})}\r\n                                                 }\r\n                         return (\r\n                         <ShowCard \r\n                         key={show.id} \r\n                         id={show.id} \r\n                         name={show.name} \r\n                         image={show.image?show.image.medium:null} \r\n                         summary={show.summary} \r\n                         onstarclick={onstarclick}\r\n                         isstarred={isstarred}\r\n                         />\r\n                         );\r\n                     })\r\n                     \r\n              }    \r\n     </FlexGrid>)\r\n\r\n}\r\n\r\nexport default ShowGrid;\r\n","import styled from \"styled-components\";\r\nimport { SearchCard } from \"../styled\";\r\n\r\nexport const StyledActorCard=styled(SearchCard)`\r\n                  .deathday{\r\n                      margin: 0;\r\n                      margin-top: 15px;\r\n                      font-weight:bold;\r\n                  }\r\n\r\n`;","import React from 'react'\r\nimport { StyledActorCard } from './ActorCard.styled'\r\n\r\nconst ActorCard = ({name,gender,deathday,birthday,country,image}) => (\r\n        <StyledActorCard>\r\n            <div className=\"img-wrapper\">\r\n                <img src={image} alt=\"actor\"/>\r\n            </div>\r\n            <h1>{name} {gender?`(${gender})`:null}</h1>\r\n            {birthday?<p>Born {birthday}</p>:null}\r\n            <p className=\"deathday\">{deathday?`Died ${deathday}`:'Alive'}</p>\r\n           \r\n             <p>{country?`comes from ${country}`:'no country known'}</p> \r\n            \r\n             \r\n             \r\n             \r\n             \r\n        </StyledActorCard>\r\n    )\r\n\r\nexport default ActorCard\r\n","export default __webpack_public_path__ + \"static/media/not_found.bf7b61ce.png\";","import React from 'react'\r\nimport { FlexGrid } from '../styled'\r\nimport ActorCard from './ActorCard'\r\nimport IMAGE_NOT_FOUND from '../../images/not_found.png'\r\n\r\n\r\n\r\nconst ActorGrid = ({data}) => (\r\n        <FlexGrid>\r\n             {\r\n               data.map(({person})=> <ActorCard key={person.id}  name={person.name} gender={person.gender} deathday={person.deathday} country={person.country?person.country.name:null} birthday={person.birthday} image={person.image?person.image.medium:IMAGE_NOT_FOUND} />\r\n               )\r\n        }\r\n        </FlexGrid>\r\n    )\r\n\r\nexport default ActorGrid\r\n","import styled from 'styled-components';\r\n\r\nexport const Searchinput=styled.input`\r\n           display:block;\r\n           font-family: 'Roboto', sans-serif;\r\n           width: 200px;\r\n           margin:auto;\r\n           outline: none;\r\n           padding:13px 15px;\r\n           border:1px solid #dbdbdb;\r\n           box-shadow: 0px 0px 10px 0px rgba(219,219,219,0.5);\r\n           font-size:14px;\r\n           border-radius: 12px;\r\n           color:#8d8d8d;\r\n\r\n           &::placeholder{\r\n               font-weight: 300;\r\n               color:#8d8d8d;\r\n           }`;\r\n\r\n    export const Radioinputwrapper=styled.div`\r\n           display:flex;\r\n           justify-content :center;\r\n           margin:20px 0px;\r\n\r\n           div{\r\n               margin: 0px 15px;\r\n           } `;\r\n\r\n  export const SearchButtonWrapper=styled.div`\r\n             text-align: center;\r\n             margin-bottom: 35px;\r\n             button{\r\n                 color:#fff;\r\n                 background-color: ${({theme})=>theme.mainColors.blue};\r\n                 margin:auto;\r\n                 padding:10px 50px;\r\n                 font-size: 15px;\r\n                 border:none;\r\n                 outline:none;\r\n                 border-radius: 12px;\r\n                 &:hover{\r\n                     cursor:pointer;\r\n                 }\r\n                }`;","/* eslint-disable arrow-body-style */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const RadioWrapper=styled.label`\r\n     display:block;\r\n     position:relative;\r\n     padding-left: 25px;\r\n     cursor:pointer;\r\n     font-size: 13px;\r\n     user-select:none;\r\n     font-weight: 700;\r\n     line-height: 1.65;\r\n     input{\r\n         position: absolute;\r\n         opacity: 0;\r\n         cursor: pointer;\r\n\r\n     }\r\n     span{\r\n         position: absolute;\r\n         top: 0;\r\n         left: 0;\r\n         height: 16px;\r\n         width: 16px;\r\n         background-color: #fff;\r\n         border: 2px solid ${({theme})=>theme.mainColors.blue};\r\n         border-radius: 50%;\r\n     }\r\n     input:checked ~ span{\r\n         background-color: #fff;\r\n         border:2px solid ${({theme})=>theme.mainColors.blue};\r\n     }\r\n\r\n     span::after{\r\n         content: ' ';\r\n         position: absolute;\r\n         display: none;\r\n     }\r\n\r\n     input:checked ~ span:after{\r\n                    display: block;\r\n                  \r\n     }\r\n\r\n     span::after{\r\n         top: 4px;\r\n         left: 4px;\r\n         height: 8px;\r\n         width: 8px;\r\n         border-radius: 50%;\r\n         background-color:  red;\r\n \r\n     }\r\n`;\r\n\r\n\r\nconst CustomRadio = ({label,...restProps}) => {\r\n    \r\n    return (\r\n             <RadioWrapper htmlFor={restProps.id}>\r\n                    {label}\r\n                    <input {...restProps} type=\"radio\" />\r\n                    <span />\r\n            </RadioWrapper>\r\n      )  \r\n}\r\n\r\nexport default CustomRadio\r\n","import React,{ useState } from 'react';\r\nimport MainPageLayout from '../components/MainPageLayout';\r\nimport {apiGet} from '../misc/config';\r\nimport ShowGrid from '../components/show/ShowGrid';\r\nimport ActorGrid from '../components/actor/ActorGrid';\r\nimport { useLastQuery } from '../misc/custom-hooks';\r\nimport { Radioinputwrapper, SearchButtonWrapper, Searchinput } from './Home.styled';\r\nimport CustomRadio from '../components/CustomRadio';\r\n\r\nconst Home = () => {\r\n\r\nconst [input,seInput]=useLastQuery();\r\nconst [results,setresults]=useState(null);\r\nconst [searchOption,setsearchOption]=useState('shows');\r\n\r\nconst onRadiochange=(ev)=>{\r\n    setsearchOption(ev.target.value);\r\n}\r\n\r\nconst isShowsearch= searchOption==='shows';\r\n\r\n\r\nconst Onsearch=()=>{\r\n\r\n    apiGet(`/search/${searchOption}?q=${input}`).then(result=>{setresults(result)});\r\n    // fetch(`https://api.tvmaze.com/search/shows?q=${input}`).then(r=>r.json).then(result=>{setresults(result);\r\n        // console.log(result)});\r\n};\r\n\r\n\r\nconst InputChange=(ev)=>{\r\n    seInput(ev.target.value);\r\n};\r\n\r\nconst onkeyDown=(ev)=>{\r\n    if(ev.keyCode===13){\r\n        Onsearch();\r\n    }\r\n};\r\nconst renderResults=()=>{\r\n    if(results && results.length===0){\r\n        return<div>No results found</div>\r\n    }\r\n    if(results && results.length>0){\r\n        return (\r\n        results[0].show?<ShowGrid data={results}/>:<ActorGrid data={results}/>\r\n             \r\n        )}\r\n    \r\n    return null;\r\n}\r\n\r\n \r\n    return (\r\n        <MainPageLayout>\r\n            <Searchinput  \r\n            type=\"text\" \r\n            placeholder=\"search here..\" \r\n            onChange={InputChange} \r\n            onKeyDown={onkeyDown} \r\n            value={input}/>\r\n\r\n        <Radioinputwrapper>\r\n            \r\n                   <div> \r\n                    <CustomRadio \r\n                    label=\"Shows\"\r\n                    id =\"shows-search\" \r\n                    value=\"shows\" \r\n                    checked={isShowsearch} \r\n                    onChange={onRadiochange}\r\n                    />\r\n             </div>\r\n\r\n              <div>\r\n                <CustomRadio \r\n                    label=\"Actors\"\r\n                    id =\"actor-search\" \r\n                    value=\"people\" \r\n                    checked={!isShowsearch} \r\n                    onChange={onRadiochange}\r\n                    />\r\n                \r\n            </div>\r\n        </Radioinputwrapper>\r\n            <SearchButtonWrapper>\r\n                <button type=\"button\" onClick={Onsearch}>Search</button>\r\n             </SearchButtonWrapper>\r\n                \r\n\r\n            \r\n            {renderResults()}\r\n        </MainPageLayout>\r\n    )\r\n    };\r\nexport default Home;\r\n","import React,{ useState,useEffect } from 'react';\r\nimport MainPageLayout from '../components/MainPageLayout';\r\nimport ShowGrid from '../components/show/ShowGrid';\r\nimport { apiGet } from '../misc/config';\r\nimport { useShows } from '../misc/custom-hooks';\r\n\r\nconst Starred = () => {\r\n      \r\n        const [starred] = useShows();\r\n        const [shows,setshows]=useState(null);\r\n        const [isloading,setisloading]=useState(true);\r\n        const [error,seterror]=useState(null);\r\n         \r\n         useEffect(()=>{\r\n\r\n             if(starred && starred.length>0){\r\n                 const promises=starred.map(showId=>apiGet(`/shows/${showId}`));\r\n\r\n                 Promise.all(promises).then(apiData=>apiData.map(show=>({show})))\r\n                 .then(results=>{\r\n                     setshows(results); \r\n                    setisloading(false);\r\n                })\r\n                 .catch(err=>{\r\n                     seterror(err.message);\r\n                      setisloading(false);\r\n                    });\r\n             }\r\n             else{\r\n                 setisloading(false);\r\n                 \r\n             }\r\n         }, [starred]);\r\n        return(\r\n        <MainPageLayout>\r\n            {isloading && <div>shows are still loading </div>}\r\n            {error && <div>Error Occured:{error}</div>}\r\n            {isloading && !shows && <div>No Shows Available </div>}\r\n            {!isloading && !error && shows && <ShowGrid data={shows}/>}\r\n        </MainPageLayout>\r\n    )\r\n};\r\nexport default Starred;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainDataWrapper =styled.div`\r\n          display:flex;\r\n          margin-bottom:40px;\r\n          img{\r\n              min-width:250px;\r\n              width:300px;\r\n              max-height:450px;\r\n              border:1px solid #ddd;\r\n              border-radius:40px;\r\n          }\r\n          .text-side{\r\n              margin-left:20px;\r\n              .summary{\r\n                  color:#5f5f5f;\r\n                  line-height:1.5;\r\n              }\r\n          }\r\n          @media only screen and (max-width:768px){\r\n              flex-wrap:wrap;\r\n          \r\n\r\n          img{\r\n              margin-bottom:20px;\r\n              margin:auto;\r\n          }\r\n         .text-side{\r\n             margin-left:0;\r\n             margin-top:20px;\r\n         }\r\n        }`;\r\n\r\nexport const Headline=styled.div`\r\n               display:flex;\r\n               align-items:center;\r\n               flex-wrap:wrap;\r\n                h1{\r\n                    margin:0;\r\n                    border-right:1px solid #ddd;\r\n                    padding-right:25px;\r\n                    margin-right:20px;\r\n                }\r\n                div{\r\n                    display:flex;\r\n                    align-items:center;\r\n                    span{\r\n                        margin-left:10px;\r\n                    }\r\n                }`;\r\n\r\nexport const Taglist=styled.div`\r\n             display:inline-flex;\r\n             flex-wrap:wrap;\r\n\r\n             span{\r\n                 margin:6px;\r\n                 margin-bottom:0;\r\n                 color:blue;\r\n                 background-color:#d0c9ff;\r\n                 padding:3px 13px;\r\n                 border-radius:20px;font-size:14px;\r\n             }`;","/* eslint-disable react/no-danger */\r\n\r\nimport React from 'react'\r\nimport { Star } from '../styled'\r\nimport { MainDataWrapper, Taglist } from './ShowMainData.styled';\r\n// import IMAGE_PLACEHOLDER from '../../images/not_found.png'\r\n\r\nconst ShowMainData = ({image,name,rating,summary,tags}) => (\r\n        <MainDataWrapper>\r\n            <img src={image?image.original:null} alt=\"show-cover\"/>\r\n            <div>\r\n                <div className=\"Headline\">\r\n                    <h1>{name}</h1>\r\n                    <div>\r\n                        <Star active/><span>{rating.average||'N/A'}</span>\r\n                    </div>\r\n                </div>\r\n                <div dangerouslySetInnerHTML={{__html:summary}}/>\r\n                <Taglist>Tags:{' '}\r\n                <div>{tags.map((tag,i)=>(\r\n                    <span key={i}>{tag}</span>\r\n                ))}</div>\r\n                </Taglist>\r\n            </div>\r\n        </MainDataWrapper>\r\n    )\r\n\r\nexport default ShowMainData;\r\n","import styled from \"styled-components\";\r\n\r\nexport const DetailsWrapper=styled.div`\r\n            p{\r\n                margin:5px 0;\r\n                span{\r\n                    font-weight:bold;\r\n                }\r\n            }\r\n `;","import React from 'react'\r\nimport { DetailsWrapper } from './Details.styled'\r\n\r\nconst Details = ({status,premiered,network}) => (\r\n        <DetailsWrapper>\r\n            <p>Status:<span>{status}</span></p>\r\n            <p>Premiered:<span>{premiered}{network?`on ${network.name}`:null}</span></p>\r\n        </DetailsWrapper>\r\n    )\r\n\r\nexport default Details","import styled from \"styled-components\";\r\n\r\nexport const SeasonWrapper=styled.div`\r\n                 p{\r\n                     margin:5px 0;\r\n                 }\r\n                 span{\r\n                     font-weight:700;\r\n                 }\r\n`;\r\n\r\n\r\nexport const SeasonList = styled.div`\r\n           display:flex;\r\n           flex-direction:column;\r\n\r\n           .season-item{\r\n               display:flex;\r\n               align-items:center;\r\n               margin:10px 0;\r\n               &:last-child{\r\n                   margin-bottom:0;\r\n               }\r\n               .left{\r\n                   flex:0 0 30%;\r\n                   border-right:1px solid #b0b0b0;\r\n                   padding-right:20px;\r\n               }\r\n               .right{\r\n                   padding-left:20px;\r\n                   flex:1;\r\n               }\r\n           }`;","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-undef */\r\nimport React from 'react'\r\nimport { SeasonList, SeasonWrapper } from './Seasons.styled';\r\n\r\nconst Seasons = ({ seasons }) => (\r\n        <SeasonWrapper>\r\n            <p> Seasons in total:<span>{seasons.length}</span></p>\r\n            <p>Episodes in total:{' '}<span>{seasons.reduce((acc,season)=>acc+season.episodeOrder,0)}</span></p>\r\n           <SeasonList>\r\n               {seasons.map(season=>(\r\n                   <div key={season.id} className=\"season-item\">\r\n                       <div className=\"left\">\r\n                           <p>Season{season.number}</p>\r\n                           <p>Episodes:<span>{season.episodeOrder}</span></p>\r\n                           </div>\r\n                           <div className=\"right\">Aired:{' '}\r\n                           <span>{season.premierDate}-{season.endDate}</span>\r\n                           </div></div>\r\n               ))}\r\n           </SeasonList>\r\n        </SeasonWrapper>\r\n    );\r\n\r\nexport default Seasons\r\n","import styled from \"styled-components\";\r\n\r\nexport const CastList=styled.div`\r\n              display:flex;\r\n              flex-wrap:wrap;\r\n\r\n              .cast-item{\r\n                  flex:1 0 50%;\r\n                  display:flex;\r\n                  margin-bottom:20px;\r\n                  align-items:center;\r\n\r\n                  @media only screen and (max-width:768px){\r\n                      flex:1 0 100%;\r\n                  }\r\n                }\r\n                .pic-wrapper{\r\n                    width:50px;\r\n                    min-width:50px;\r\n                    height:50px;\r\n                    overflow: hidden;\r\n                    border-radius:50%;\r\n                    img{\r\n                        object-fit:cover;\r\n                        width:100%;\r\n                        height:100%;\r\n                    }\r\n                }\r\n                .actor{\r\n                    margin-left:25px;\r\n                    .bold{\r\n                        font-weight:bold;\r\n                    }\r\n                }`;","import React from 'react'\r\nimport { CastList } from './Cast.styled';\r\n\r\nconst Cast = ({ cast }) => (\r\n        <CastList>\r\n            {cast.map(({person,character,voice},key)=>(\r\n                <div key={key}>\r\n                    <div className=\"pic-wrapper\">\r\n                        <img src={person.image?person.image.medium:null} alt=\"cast-person\"/>\r\n                    </div>\r\n                    <div className=\"actor\"><span className=\"bold\">{person.name}|{character.name}{voice?'/voice':' '}</span></div>\r\n                    </div>\r\n            ))}\r\n        </CastList>\r\n    );\r\n\r\nexport default Cast\r\n","import styled from \"styled-components\";\r\n\r\nexport const ShowPageWrapper=styled.div`\r\n    padding :0 20px;\r\n\r\n    @media only screen and (min-width:516px){\r\n        padding:0 40px;\r\n    }\r\n\r\n    @media only screen and (min-width:768px){\r\n        padding :0 60px;\r\n    }\r\n    \r\n    @media only screen and (min-width:992px){\r\n        padding :0 80px;\r\n    }`;\r\n\r\nexport const InfoBlock=styled.div`\r\n       margin-bottom:40px;\r\n       h2{\r\n           margin:0;\r\n           margin-bottom:30px;\r\n           font-size:22px;\r\n       }\r\n`;","/* eslint-disable no-undef */\r\n/* eslint-disable no-underscore-dangle */\r\nimport  React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ShowMainData from '../components/show/ShowMainData';\r\nimport Details from '../components/show/Details';\r\nimport Seasons from '../components/show/Seasons';\r\nimport Cast from '../components/show/Cast';\r\nimport { InfoBlock, ShowPageWrapper } from './Show.styled';\r\nimport { useShow } from '../misc/custom-hooks';\r\n\r\n\r\n\r\n\r\nconst Show = () => {\r\n    \r\n    const { id }=useParams();\r\n    const { show,isloading,error}=useShow(id);\r\n     \r\n\r\n    if(isloading){\r\n        return <div>Data is being loaded</div>\r\n    }\r\n\r\n     if(error){\r\n        return <div>error occured:{error}</div>\r\n    }\r\n    return (\r\n        <ShowPageWrapper>\r\n            <ShowMainData image={show.image} name={show.name} rating={show.rating} summary={show.summary} tags={show.genres}/>\r\n            <InfoBlock>\r\n                <h2>Details</h2>\r\n                <Details status={show.status} network={show.network} premiered={show.premiered}/>\r\n            </InfoBlock>\r\n\r\n            <InfoBlock>\r\n                <h2>Seasons</h2>\r\n                <Seasons seasons={show._embedded.seasons}/>\r\n            </InfoBlock>\r\n\r\n            <InfoBlock>\r\n                <h2>Cast</h2>\r\n                <Cast cast={show._embedded.cast}/>\r\n            </InfoBlock>\r\n\r\n            \r\n        </ShowPageWrapper>\r\n    \r\n    \r\n    )\r\n}\r\n\r\nexport default Show;\r\n","import React from \"react\";\nimport { Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n// eslint-disable-next-line import/no-named-as-default\nimport Home from './pages/Home';\n// eslint-disable-next-line no-unused-vars\nimport Starred from './pages/Starred';\nimport Show from './pages/Show';\n\nconst theme={\n     mainColors:{\n          blue:'#2400ff',\n          gray:'c6c6c6',\n          dark:'#353535',\n     },\n};\n\nfunction App() {\n  return ( \n  <ThemeProvider theme={theme}> \n    <Switch>\n       \n       <Route exact path=\"/\">\n\n            <Home/>\n\n       </Route>\n       \n       <Route exact path=\"/Home\">\n\n            <Home/>\n\n       </Route>\n       \n       <Route exact path=\"/Starred\">\n         \n              <Starred/>\n\n       </Route>\n\n       <Route exact path=\"/show/:id\">\n                 <Show/>\n       </Route>\n       \n       <Route>\n         \n             Page 404 not found\n\n       </Route>\n\n    </Switch>\n    </ThemeProvider>\n  \n      );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n     <BrowserRouter><App /></BrowserRouter>\n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}